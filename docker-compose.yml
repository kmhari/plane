services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./web/Dockerfile.web
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: node web/server.js web
    depends_on:
      - api

  admin:
    container_name: admin
    build:
      context: .
      dockerfile: ./admin/Dockerfile.admin
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: node admin/server.js admin
    depends_on:
      - api
      - web

  space:
    container_name: space
    build:
      context: .
      dockerfile: ./space/Dockerfile.space
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    ports:
      - 4000:3000
    command: node space/server.js space
    depends_on:
      - api
      - web

  api:
    container_name: api
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    ports:
      - 8000:8000
    volumes:
      - .:/app
    command: ./bin/docker-entrypoint-api.sh
    env_file:
      - ./apiserver/.env
    depends_on:
      - plane-db
      - plane-redis

  worker:
    container_name: bgworker
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: ./bin/docker-entrypoint-worker.sh
    env_file:
      - ./apiserver/.env
    volumes:
      - .:/app
    depends_on:
      - api
      - plane-db
      - plane-redis

  beat-worker:
    container_name: beatworker
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    volumes:
      - .:/app
    command: ./bin/docker-entrypoint-beat.sh
    env_file:
      - ./apiserver/.env
    depends_on:
      - api
      - plane-db
      - plane-redis

  plane-redis:
    container_name: plane-redis
    image: redis:6.2.7-alpine
    restart: always
    volumes:
      - redisdata:/data

  migrator:
    container_name: plane-migrator
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
      args:
        DOCKER_BUILDKIT: 1
    restart: no
    command: ./bin/docker-entrypoint-migrator.sh
    env_file:
      - ./apiserver/.env
    depends_on:
      - plane-db
      - plane-redis

  plane-db:
    container_name: plane-db
    image: postgres:15.2-alpine
    restart: always
    command: postgres -c 'max_connections=1000'
      #volumes:
      #- pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${PGUSER}
      POSTGRES_DB: ${PGDATABASE}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      PGDATA: /var/lib/postgresql/data

volumes:
  pgdata:
  redisdata:
  uploads:
