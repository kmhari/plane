version: "3.8"

services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: ./web/Dockerfile.web
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: /usr/local/bin/start.sh web/server.js web
    ports:
      - 3000:3000
    depends_on:
      - api
      - worker

  space:
    container_name: space
    build:
      context: .
      dockerfile: ./space/Dockerfile.space
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    ports:
      - 4000:3000
    command: /usr/local/bin/start.sh space/server.js space
    depends_on:
      - api
      - worker
      - web

  api:
    container_name: api
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: ./bin/takeoff
    ports:
      - 8000:8000
    env_file:
      - ./apiserver/.env
        #    depends_on:
      #- plane-db
      #      - plane-redis

  worker:
    container_name: bgworker
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: ./bin/worker
    env_file:
      - ./apiserver/.env
    depends_on:
      - api
      #- plane-db
      - plane-redis

  beat-worker:
    container_name: beatworker
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
      args:
        DOCKER_BUILDKIT: 1
    restart: always
    command: ./bin/beat
    env_file:
      - ./apiserver/.env
    depends_on:
      - api
      #- plane-db
      - plane-redis


  plane-redis:
    container_name: plane-redis
    image: redis:6.2.7-alpine
    restart: always
    volumes:
      - redisdata:/data

volumes:
  pgdata:
  redisdata:
  uploads:

